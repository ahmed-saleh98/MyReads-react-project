{"version":3,"sources":["BooksAPI.js","components/SearchBar.js","components/ChangerButton.js","components/Book.js","components/SearchResult.js","components/Search.js","components/BookShelf.js","components/Home.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","SearchBar","state","value","handleChange","e","val","target","_this","props","setState","resetSearch","this","react_default","a","createElement","className","react_router_dom","to","onClick","type","placeholder","onChange","autoFocus","Component","ChangerButton","_this$props","onMoveBook","disabled","Book","style","width","height","backgroundImage","imageLinks","thumbnail","components_ChangerButton","title","averageRating","authors","join","categories","SearchResult","searchBooks","updatedBooks","map","b","components_Book","key","Search","components_SearchBar","components_SearchResult","Bookshelf","booksOnThisShelf","filter","name","Home","bookShelves","BookShelf","App","BooksAPI","toConsumableArray","searchForBooks","debounce","console","log","length","error","_this$state","react_router","exact","path","components_Home","components_Search","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ca9bb075.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass SearchBar extends Component {\n  state = {\n    value: \"\",\n  };\n  // handle search input\n  handleChange = (e) => {\n    const val = e.target.value;\n    const { search } = this.props;\n    this.setState({\n      value: val,\n    });\n    search(val);\n  };\n  render() {\n    const { resetSearch } = this.props;\n    return (\n      <div className=\"search-books-bar\">\n        <Link to=\"/\" className=\"close-search\" onClick={resetSearch}>\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          {/*\n        NOTES: The search from BooksAPI is limited to a particular set of search terms.\n        You can find these search terms here:\n        https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n        However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n        you don't find a specific author or title. Every search is limited by search terms.\n      */}\n          <input\n            type=\"text\"\n            value={this.state.value}\n            placeholder=\"Search by title or author\"\n            onChange={this.handleChange}\n            autoFocus\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default SearchBar;\n","import React, { Component } from \"react\";\nclass ChangerButton extends Component {\n  state = {\n    value: this.props.shelf,\n  };\n  handleChange = (e) => {\n    const { book, onMoveBook } = this.props;\n    const val = e.target.value;\n    this.setState({ value: val });\n    onMoveBook(book, val);\n  };\n  render() {\n    const { value } = this.state;\n    return (\n      <div className=\"book-shelf-changer\">\n        <select value={value} onChange={this.handleChange}>\n          <option value=\"move\" disabled>\n            Move to...\n          </option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    );\n  }\n}\nexport default ChangerButton;\n","import React from \"react\";\nimport ChangerButton from \"./ChangerButton\";\nconst Book = (props) => {\n  const { book, shelf, onMoveBook } = props;\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${book.imageLinks &&\n                book.imageLinks.thumbnail})`,\n            }}\n          />\n          <ChangerButton book={book} shelf={shelf} onMoveBook={onMoveBook} />\n        </div>\n        <div className=\"book-title\">{book.title} </div>\n        <span className=\"book-rating\">\n          Rating: {book.averageRating ? `${book.averageRating} *` : \"N/A\"}\n        </span>\n        <div className=\"book-authors\">\n          {book.authors && book.authors.join(\", \")}\n        </div>\n        <span className=\"book-cat\">\n          Category: {book.categories ? book.categories : \"N/A\"}\n        </span>\n      </div>\n    </li>\n  );\n};\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book\";\nconst SearchResult = (props) => {\n  const { searchBooks, books, onMoveBook } = props;\n  // update books's shelf state on search results\n  const updatedBooks = searchBooks.map((book) => {\n    books.map((b) => {\n      if (b.id === book.id) {\n        book.shelf = b.shelf;\n      }\n      return b;\n    });\n    return book;\n  });\n  return (\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\">\n        {updatedBooks.map((book) => (\n          <Book\n            key={book.id}\n            book={book}\n            shelf={book.shelf ? book.shelf : \"none\"}\n            onMoveBook={onMoveBook}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n};\nexport default SearchResult;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nconst Search = (props) => {\n  const { search, resetSearch, searchBooks, onMoveBook, books } = props;\n  return (\n    <div className=\"search-books\">\n      <SearchBar search={search} resetSearch={resetSearch} />\n      <SearchResult\n        books={books}\n        searchBooks={searchBooks}\n        onMoveBook={onMoveBook}\n      />\n    </div>\n  );\n};\nexport default Search;\n","import React from \"react\";\nimport Book from \"./Book\";\nconst Bookshelf = (props) => {\n  const { shelf, books, onMoveBook } = props;\n  const booksOnThisShelf = books.filter((book) => book.shelf === shelf.key);\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{shelf.name}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {booksOnThisShelf.map((book) => (\n            <Book\n              key={book.id}\n              book={book}\n              shelf={shelf.key}\n              onMoveBook={onMoveBook}\n            />\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\nexport default Bookshelf;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Bookshelf from \"./BookShelf\";\nconst Home = (props) => {\n  const { bookShelves, books, onMoveBook } = props;\n\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        <div>\n          {bookShelves.map((shelf) => (\n            <Bookshelf\n              key={shelf.key}\n              shelf={shelf}\n              books={books}\n              onMoveBook={onMoveBook}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">Add a book</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { debounce } from \"throttle-debounce\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\n\nclass App extends React.Component {\n  state = {\n    bookShelves: [\n      { key: \"currentlyReading\", name: \"Currently Reading\" },\n      { key: \"wantToRead\", name: \"Want to Read\" },\n      { key: \"read\", name: \"Read\" },\n    ],\n    books: [],\n    searchBooks: [],\n  };\n\n  // get data from DB\n  async componentDidMount() {\n    const books = await BooksAPI.getAll();\n    this.setState({ books });\n  }\n\n  // move books between shelves\n  onMoveBook = (book, shelf) => {\n    const { books } = this.state;\n    // update DB\n    BooksAPI.update(book, shelf);\n\n    let updatedBooks = books.filter((b) => b.id !== book.id);\n    if (shelf !== \"none\") {\n      book.shelf = shelf;\n      updatedBooks = [...updatedBooks, book];\n    }\n    this.setState({\n      books: updatedBooks,\n    });\n  };\n\n  // handle search\n  searchForBooks = debounce(350, false, (query) => {\n    console.log(query);\n    if (query.length > 0) {\n      BooksAPI.search(query).then((books) => {\n        if (books.error) {\n          this.setState({ searchBooks: [] });\n        } else {\n          this.setState({ searchBooks: books });\n        }\n      });\n    } else {\n      this.setState({ searchBooks: [] });\n    }\n  });\n\n  resetSearch = () => {\n    this.setState({ searchBooks: [] });\n  };\n\n  render() {\n    const { books, bookShelves, searchBooks } = this.state;\n    return (\n      <div className=\"app\">\n        <Route exact path=\"/\">\n          <Home\n            books={books}\n            bookShelves={bookShelves}\n            onMoveBook={this.onMoveBook}\n          />\n        </Route>\n        <Route path=\"/search\">\n          <Search\n            searchBooks={searchBooks}\n            books={books}\n            onMoveBook={this.onMoveBook}\n            search={this.searchForBooks}\n            resetSearch={this.resetSearch}\n          />\n        </Route>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}